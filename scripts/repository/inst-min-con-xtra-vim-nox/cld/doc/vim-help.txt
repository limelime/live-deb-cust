# Quit vim
    Press ESC key and then type in `:q!`

# Basic modes
    ESC     Go back to normal mode. It is the initial state.
    i       Insert mode, ESC+i.
    v       Visual mode, ESC+v.
    CTRL+v  Visual block mode, ESC+V. Useful for alignment and indentation.

# Help
    :help <command> E.g. :help yy
    :q              Quit help window.
    CTRL+q          To escape when you mistakenly press CTRL+s.

# NORMAL mode
    :q      Quit.
    :q!     Quit without saving.
    :x      Quit with saving.
    :w file.txt         Save to file.txt.
    :e a/b/file.txt     Edit ./a/b/file.txt.
    /pattern            Search pattern. Enter to position cursor. Forward(n). Backward(N), ggn, GN.

    # Cursor movement
        h       Left
        j       Down
        k       Up
        l       Right
        CTRL+f  Page down
        CTRL+b  Page up
        CTRL+d  Page down 1/2 of screen.
        CTRL+u  Page up 1/3 of screen.
        H       High: move to the 1st line of screen, start before the 1st char of the line.
        M       Middle: move to the middle of screen.
        L       Low: move to the last line of screen.
        w       Move to the 1st char of next word.
        b       Move back, reverse of w.
        e       Move to the last char of next word.
        ge      Move back, reverse of e.
        A       Append at the end of the line: move to end of line and switch to INSERT mode.
        I       Insert from the beginning of the line: move before the 1st char of line and switch to INSERT mode.
        0       Move cursor to beginning of the line.

    # Search
        f<char>     Find char.

        /<string>   Find string.
        n           Find next occurrence.
        N           Find previous occurrence.
        /Linux\c    Performs ignore case search.
        /Linux\C    Force case matching search. 
        :set ignorecase     :set ic
        :set noignorecase   :set noic
        https://vim.fandom.com/wiki/Highlight_all_search_pattern_matches
            :set hlsearch
            :nohlsearch
            :noh
        
        https://stackoverflow.com/a/7747112
            *   Jump to the next occurrence of the word under the cursor.
            n   Next
            N   Previous
            g*  Search word without word boundary.

    yy      Copy line. It includes EOL character.
    yiw     Copy (inner) word.
    y2j     Copy 2 lines below.
    p       Paste.

    dd      Cut/Delete line.
    dw      Delete word.
    d$      Delete till end of line.
    d3j     Delete 3 lines below.
    dG      Delete from current to end of file.

    u       Undo
    CTRL+r  Redo

    :s/SEARCH/REPLACE       Search and replace 1st matching occurrence on this line.
    :5,25s/SEARCH/REPLACE   Search and replace from line 5 to line 25.
    :s/SEARCH/REPLACE/g     Search and replace all matching terms on this line.
    :.,$s/SEARCH/REPLACE    Search and replace from current line to the end of file.
    :%s/SEARCH/REPLACE      Search and replace on the entire file.
    :s/\~//g                Remove tilde(~). Need to escape it with (\).

    :42     Goto line 42.

    # Buffers
        :ls     List buffers.
        :b<#>   Switch to buffer #.
        CTRL+6  Switch to previous buffer.
        :bd     Close buffer, delete buffer from buffer list.
        :bn     Switch to next buffer.
        :bp     Switch to previous buffer.
    
    # Run external command
        :!<cmd>     Run <cmd>.

    # Lowercase / uppercase
        gu  Lowercase: move in word and gu.
        gU  Uppercase: move in word and gU.
        g~  Toggle case: move in word and g~.

# Configurations
    ~/.vimrc
    :set relativenumber Help move cursor around using 2j, 3k, 4l, 5h, etc..
    :set number         Display line number
    :set nowrap         Turn off line wrapping.

# Format PHP codes
    Select the whole file(ggvG) and auto-indent(=).
    gg  Move cursor to the top of file.
    V   Change to VISUAL LINE mode.
    G   Move cursor to the last line of file.
    =   Auto-indent
    
# Align block on text with indentation
    CTRL+v  Switch to VISUAL BLOCK mode.
    jj      Select 2 lines below.
    >       Indent.

    Advance indentation: https://stackoverflow.com/a/7529839

# VISUAL BLOCK mode
    # Insert space on multiple lines at the same position
        CTRL+v      Switch to Visual block mode.
        jj          Select 2 lines below.
        I           Switch to Insert mode.
        <space>     Press <space>. A space is added to the first line. It is normal.
        ESC+ESC     A space will be added to all selected lines.
    
    # Delete character, use x.
        CTRL+v      Switch to Visual block mode.
        jj          Select 2 lines below.
        x           Delete first column, character.
        .           Repeat the delete.

# INSERT mode
    # Autocomplete file path
    CTRL+x CTRL+f   As you type filename, press CTRL+x CTRL+f
    CTRL+n          Select next matching result.
    CTRL+p          Select previous matching result.

====================================================


# Highlight on word
1. Enable search `:set hlsearch`
1. Place your cursor of word.
1. Press `*`
1. Press `n` to go to next occurence.
1. Press `#` to go to next occurence.
    https://stackoverflow.com/questions/3431184/highlight-all-occurrence-of-a-selected-word
    https://vim.fandom.com/wiki/Auto_highlight_current_word_when_idle
    
# Wrapping
    For preventing vim from wrapping long lines I use these two lines in my .vimrc:
    set nowrap           " do not automatically wrap on load
    set formatoptions-=t " do not automatically wrap text when typing


# Tab: https://vim.fandom.com/wiki/Converting_tabs_to_spaces
    set expandtab       "Insert space when tab key is pressed. To enter a real tab character use Ctrl-V<Tab>.
    set tabstop=4       "Insert 4 spaces for TAB.
    set shiftwidth=4    "??To change the number of space characters inserted for indentation??
    :retab              " Change all existing TAB characters to match the current tab settings.
    set softtabstop=4   " To cause <Tab> and <BS> to insert and delete the correct number of spaces.
    
