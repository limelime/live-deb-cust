# References:
#   https://stackoverflow.com/a/28806991
#   https://shapeshed.com/unix-xargs/

# Execute command if not empty.
	echo '' | xargs -r echo

# Print each command that will be executed to the terminal
	echo 'one587 two587 three587' | xargs -t echo

# Handle space by using -0, which splits the input around NUL bytes.
	echo $'one587\ntwo587\nthree and four587' | tr '\n' '\0' | xargs -0 -I{} echo "{}"

# Run multiple commands
	echo $'one\ntwo\nthree and four' | tr '\n' '\0' | xargs -0 -I{} sh -c "echo Y; echo \"{}\";"

# Pass multiple arguments.
    echo {1..8} | xargs -n2 sh -c 'echo "the number $1 comes before $2"' sh
    
# Combined use
	\ls *.xmp | sed 's/\.xmp//' |tr '\n' '\0'| xargs -0 -n1 -I{} sh -c "echo Y| zero-size.sh \"{}\";"
	\ls *.mkv *.avi *.mp4 *.rmvb *.rm |tr '\n' '\0'| xargs -0 -n1 -I{} sh -c "mpv-movie-shot.sh {} && rm -f {}"
    
    # Use Bash. $0 is the first argument passed to Bash, first input argument .
        find . -type d | xargs -L 1 bash -c 'cd "$0"; ls-new-update.sh; xmp-del.sh; cd ..'
        ls | xargs -L 1 bash -c 'cd "$0" && pwd && ls'
    
# Use double-quote instead of null(\0)
	find . -type f | sort | sed 's/^/"/' | sed 's/$/"/' | xargs -n1000 rar a -m0 archive.rar

# Add newline for every 3 words
	echo 'cat dog eel pig'| xargs -n3

echo {1..8} | parallel -N2 echo {1} {2}
https://unix.stackexchange.com/questions/178191/multiple-arguments-using-xargs
